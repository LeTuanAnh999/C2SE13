import React, { useEffect, useState ,useRef} from 'react'
import User_header from '../page_header/User_header'
import {  useParams,useLocation } from 'react-router-dom';
import { useNavigate } from "react-router-dom";
import "../../jobs/Style.css"
import Select from 'react-select'

import axios from 'axios';
import { Badge,Space,Card,Table, Button} from 'antd';
import 'react-toastify/dist/ReactToastify.css';
import {  toast, } from 'react-toastify';
import { ToastContainer } from 'react-toastify';
const slugVietnamese = require('slug-vietnamese');
   const optioncapbac =[
    { value: '1', label: 'To√†n th·ªùi gian' },
    { value: '3', label: 'B√°n th·ªùi gian' },
    { value: '5', label: 'Th·ª±c t·∫≠p' },
  
  ]
  const optiondiadiem = [
    { value: 'tai-ha-noi-l1c', label: 'H√† N·ªôi' },
    { value: 'tai-ho-chi-minh-l2c', label: 'H·ªì Ch√≠ Minh' },
    {value:'tai-binh-duong-l3c', label:'B√¨nh D∆∞∆°ng'},
    {value:'tai-bac-ninh-l4c', label:'B·∫Øc Ninh'},
    {value:'tai-dong-nai-l5c', label:'ƒê·ªìng Nai'},
    {value:'tai-hung-yen-l6c', label:'H∆∞ng Y√™n'},
    {value:'tai-hai-duong-l7c', label:'H·∫£i D∆∞∆°ng'},
    {value:'tai-da-nang-l8c', label:'ƒê√† N·∫µng'},
    {value:'tai-hai-phong-l9c', label:'H·∫£i Ph√≤ng'},
    {value:'tai-an-giang-l10c', label:'An Giang'},
    {value:'tai-ba-ria-vung-tau-l11c', label:'B√† R·ªãa - V≈©ng T√†u'},
    {value:'tai-bac-giang-l12c', label:'B·∫Øc Giang'},
  ];
  const options = [
    { value: '&salary_min=0&salary_max=10000000', label: 'D∆∞·ªõi 10 tri·ªáu' },
    { value: '&salary_min=10000000&salary_max=15000000', label: '10 - 15 tri·ªáu' },
    { value: '&salary_min=15000000&salary_max=20000000', label: '15 - 20 tri·ªáu' },
    { value: '&salary_min=20000000&salary_max=25000000', label: '20 - 25 tri·ªáu' },
    { value: '&salary_min=25000000&salary_max=30000000', label: '25 - 30 tri·ªáu' },
   
    
  ]
function TimKiemDaNenTang() {
    let navigate = useNavigate(); 
    const location = useLocation();


    const activetimviec=(name)=>{
        if(name === true){
            const idviec = document.getElementById('timkiemdanentang');
            idviec.style.color="#00b14f"
        }
        
    }


    // cv

    const [data,setdata] = useState([])
    const [tencongviec,settencongviec] = useState("");
    const [diadiemcv,setdiadiemcv]  = useState("");
    const [hinhthuclamviec,sethinhthuclamviec] = useState("");
    const [mucluong,setmucluong]= useState("");

    // onchange
      
    const handleCityChange = (selected) => {
        setdiadiemcv(selected);
      };
    // tencongviec
    const handleChange= (event) => {
        settencongviec(event.target.value)
      }

    //c·∫•p b·∫≠c
    const hanldehinhthuc  =(selected)=>{
        sethinhthuclamviec(selected)
    }
    //m·ª©c l∆∞∆°ng
    const hanldemucluong  =(selected)=>{

       
        setmucluong(selected)
    }


    const toastId = useRef(null);

    const getdats = async () => {
     
      try {
        let checktencongviec =""
        if(tencongviec == null || tencongviec == ""){
            checktencongviec = ""
        }else{
            checktencongviec =slugVietnamese(tencongviec)
        }
        let checkdiadiem =""
        if(diadiemcv.value == null || diadiemcv.value == "" ){
            checkdiadiem = ""
        }else{
            checkdiadiem =(diadiemcv.value)
        }
        let checkhinhthuc=""
        if(hinhthuclamviec.value === undefined){
            checkhinhthuc=1
        }else{
            checkhinhthuc= hinhthuclamviec.value
        }
        let checkmucluong=""
        if(mucluong.value === undefined){
            checkmucluong='&salary_min=0&salary_max=10000000'
        }else{
            checkmucluong= mucluong.value
        }
        let url =""
      
        url ="http://localhost:5555/apiv1/getdatagiaoducdanentang?tencongviec="+checktencongviec+"&diadiem="+checkdiadiem+"&salary="+checkhinhthuc+checkmucluong
       
      
        const result = await axios.get(url)
        setdata(result.data.data)
        console.log(result)
      } catch (error) {
        // Handle errors here
        console.error(error);
        throw error; // Rethrow the error to be caught by the toast
      }
    };
    const Submittimviec=async()=>{

        if(! toast.isActive(toastId.current)) {
            toastId.current = toast.promise(
              getdats,
              {
                pending: 'ƒêang l·∫•y d·ªØ li·ªáu!üëå',
                success: 'Th√†nh c√¥ng ',
                error: 'C√≥ l·ªói x·∫£y ra ü§Ø',
              
              
              }
              
            )
          }
      
    
   
    }

    const applycv = async(item)=>{
      console.log(item)
      window.open(item.ink, '_blank');
    }

    const columns = [
        {
          title: 'Image',
          dataIndex: 'image',
          render:(image) => <img src ={image}/>,
          width:"10%",
        },
        {
          title: 'T√™n c√¥ng vi·ªác',
          dataIndex: 'Title',
         
        },
        {
            title: 'M·ª©c l∆∞∆°ng',
            dataIndex: 'Salary',
           
          },
          {
            title: 'Th·ªùi h·∫°n CV',
            dataIndex: 'Time_cv',
            render:(Time_cv) => <> C√≤n {Time_cv} ng√†y</>
           
          },
          {
            title: 'ƒê·ªãa ƒëi·ªÉm',
            dataIndex: 'Address',
           
          },
          {
            title: 'Nh√† tuy·ªÉn d·ª•ng',
            dataIndex: 'Company',
           
          },
          {
            title: 'Ch·ª©c nƒÉng',
            dataIndex: 'Company',
            render:(Company,item)=> <> <Button type='primary' className='mt-1' onClick={()=> applycv(item)}>·ª®ng tuy·ªÉn</Button></>
          },
      ];


      const onChange = (pagination, filters, sorter, extra) => {
        console.log('params', pagination, filters, sorter, extra);
      };
    useEffect(() => {
      activetimviec(location.pathname.includes('tim-kiem-da-nen-tang'));
  
    }, []);
  return (
    <div>
        <User_header/>


        <ToastContainer />
        <div id ="main">
        <div className='container bg-white mb-40 search-div'>
            <div className='d-flex banner'>
                <div className='ml-auto content'>
                    <h1 className="title">T√¨m ki·∫øm ƒëa n·ªÅn  t·∫£ng  th√™m d·ªØ li·ªáu vi·ªác l√†m ng√†nh gi√°o d·ª•c </h1>
                    <p className="description">N√¢ng t·∫ßm s·ª± nghi·ªáp v·ªõi c√°c c∆° h·ªôi vi·ªác l√†m gi√°o d·ª•c t·∫°i c√°c c√¥ng ty h√†ng ƒë·∫ßu. Thu nh·∫≠p x·ª©ng t·∫ßm, ƒë√£i ng·ªô h·∫•p d·∫´n, tr·∫£i nghi·ªám ƒë√°ng gi√°, kh√°m ph√° ngay!</p>
                    <div className="label-tag">
                    <label className="label-remote"><i className="fa-solid fa-circle-check"></i> T√¨m ki·∫øm ƒëa n√™n t·∫£ng</label>
                    <label className="label-remote"><i className="fa-solid fa-circle-check"></i> T√¨m ki·∫øm theo ti√™u ƒë·ªÅ</label>
                    <label className="label-remote"><i className="fa-solid fa-circle-check"></i> T√¨m ki·∫øm theo ƒë·ªãa ƒëi·ªÉm</label>
                    <label className="label-remote"><i className="fa-solid fa-circle-check"></i> T√¨m ki·∫øm theo v·ªã tr√≠...</label>
                    </div>


                </div>

                <div className="image">
               
                </div>

               
            </div>
            <div className='container bg-white mb-40 search-div' style={{marginTop:"-0.2rem"}}>

                  

                    <div className='box-item-cv py-2 px-2'>
                    <Badge.Ribbon text="ƒêang ph√°t tri·ªÉn th√™m c√°c n·ªÅn t·∫£ng kh√°c" color="green">
                        <Card title="Ch·ªçn n·ªÅn t·∫£ng t√¨m ki·∫øm" size="small">
                            <div id="selectnentang" >
                             <Select options={[
                                        { value: 'TOPCV', label: 'N·ªÅn t·∫£ng TOPCV' },
                                      
                                        // { value: 'Careerbuilder', label: 'N·ªÅn t·∫£ng Careerbuilder ' },
                                       
                                    ]}

                                    id="" name="company_field" className="classForminput" 
                                    placeholder="N·ªÅn t·∫£ng  m·∫∑c ƒë·ªãnh TOPCV"
                                    defaultValue={"N·ªÅn t·∫£ng TOPCV"}
                                    style={{zIndex:"88888"}}
                                    />

                             </div>
                             <div className='box-search '  >
                                    <div className='d-flex' id ="">
                                      
                                        <div className="form-group input-data">
                                        <span className="icon" id="icon-new-id" style={{zIndex:"unset"}}>
                                        <i className="fa-solid fa-magnifying-glass"></i>
                                        </span>
                                        <input id="keyword" name="keyword" type="text"  className="form-control border-hover" placeholder="T√™n c√¥ng vi·ªác, v·ªã tr√≠ b·∫°n mu·ªën ·ª©ng tuy·ªÉn ..."     value={tencongviec} onChange={handleChange}/>
                                        </div>


                                        <div className="form-group input-data category">
                                            <span className="icon" id="icon-new-id" style={{zIndex:"unset "}}>
                                            <i className="fa-solid fa-building"></i>
                                            </span>
                                        
                                            <Select options={optiondiadiem} value={diadiemcv} onChange={handleCityChange}

                                            id="" name="company_field" className="classForminput" 
                                            placeholder="ƒê·ªãa ƒëi·ªÉm"
                                            
                                            />

                                        
                                        </div>

                                        <div className="form-group input-data category">
                                            <span className="icon" style={{zIndex:"unset "}}>
                                            <i className="fa-solid fa-chart-user"></i>
                                            </span>
                                        
                                                <Select options={optioncapbac} value={hinhthuclamviec} onChange={hanldehinhthuc}
                                            
                                            id="" name="company_field" className="classForminput" 
                                            placeholder="H√¨nh th·ª©c l√†m vi·ªác"
                                            
                                            />
                                        </div>
                                        <div className="form-group input-data category last">
                                            <span className="icon" style={{zIndex:"unset "}}>
                                            <i className="fa-solid fa-money-check-dollar"></i>
                                            </span>
                                        
                                                <Select options={options} value={mucluong} onChange={hanldemucluong}
                                            
                                            id="" name="company_field" className="classForminput" 
                                            placeholder="T·∫•t c·∫£ m·ª©c l∆∞∆°ng"
                                            
                                            />
                                        </div>

                                        <div className="form-group" id="btn-timkiemjob">
                                        <button type="submit" className="btn btn-search-job" onClick={Submittimviec}><i className="fa-solid fa-magnifying-glass"></i> T√¨m ki·∫øm</button>
                                        </div>



                                    </div>

                            </div>

                            <div className='item'>
                            <Table columns={columns} dataSource={data} onChange={onChange} />
                            </div>
                        </Card>


                        </Badge.Ribbon>

                    </div>
            </div>

        </div>

        </div>




    </div>
  )
}

export default TimKiemDaNenTang